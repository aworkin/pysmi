[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pysmi"
dynamic = ["version"]
description = "SNMP SMI/MIB Parser"
readme = "README.md"
requires-python = ">=3.8"
license = "BSD-2-Clause"
license-files = { paths = ["LICENSE.rst"] }
authors = [
    { name = "Ilya Etingof", email = "etingof@gmail.com" },
]
maintainers = [
    { name = "Alexander Workin <alexander.workin@gmail.com>" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking :: Monitoring",
]
dependencies = [
    "jinja2>=2.10.1",
    "ply",
]

[project.urls]
Homepage = "https://github.com/aworkin/pysmi"

[tool.hatch.version]
source = "vcs"
raw-options.local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "pysmi/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "pysmi",
    "scripts/mibdump.py",
    "scripts/mibcopy.py"
]

[tool.hatch.envs.test]
dependencies = [
    "pysnmp"
]

[tool.hatch.envs.test.scripts]
test = "pytest tests"

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.dev]
template = "test"
extra-dependencies = [
    "mypy",
    "ruff",
    "black"
]

[tool.hatch.envs.dev.scripts]
check = "mypy ."
lint = "ruff ."
lint-fix = "ruff --fix ."
style = "black ."

[tool.hatch.envs.docs]
detatched = true
dependencies = ["Sphinx"]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs/source docs/html"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

# Aspirational List
select= [
#  "A",
  "B",
#  "C",
#  "DTZ",
  "E",
#  "EM",
  "F",
#  "FBT",
#  "I",
#  "ICN",
#  "ISC",
#  "N",
#  "PLC",
#  "PLE",
#  "PLR",
#  "PLW",
#  "Q",
#  "RUF",
#  "S",
#  "SIM",
#  "T",
#  "TID",
#  "UP",
#  "W",
#  "YTT",
]
ignore = ["D100", "D101", "D102", "D103", "D104", "D106", "D107", "D412"]
unfixable = ["F401"]
